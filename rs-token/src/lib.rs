#[repr(u8)]
#[derive(Copy,Clone)]
pub enum TokenType {
  kw_abstract = 0,
  kw_any,
  kw_as,
  kw_assert,
  kw_asserts,
  kw_async,
  kw_await,
  kw_bigint,
  kw_boolean,
  kw_break,
  kw_case,
  kw_catch,
  kw_class,
  kw_const,
  kw_constructor,
  kw_continue,
  kw_debugger,
  kw_declare,
  kw_default,
  kw_delete,
  kw_do,
  kw_else,
  kw_enum,
  kw_export,
  kw_extends,
  kw_false,
  kw_finally,
  kw_for,
  kw_from,
  kw_function,
  kw_get,
  kw_global,
  kw_if,
  kw_implements,
  kw_import,
  kw_in,
  kw_infer,
  kw_instanceof,
  kw_interface,
  kw_intrinsic,
  kw_is,
  kw_keyof,
  kw_let,
  kw_module,
  kw_namespace,
  kw_never,
  kw_new,
  kw_null,
  kw_number,
  kw_object,
  kw_of,
  kw_out,
  kw_override,
  kw_package,
  kw_private,
  kw_protected,
  kw_public,
  kw_readonly,
  kw_require,
  kw_return,
  kw_set,
  kw_static,
  kw_string,
  kw_super,
  kw_switch,
  kw_symbol,
  kw_this,
  kw_throw,
  kw_true,
  kw_try,
  kw_type,
  kw_typeof,
  kw_undefined,
  kw_unique,
  kw_unknown,
  kw_var,
  kw_void,
  kw_while,
  kw_with,
  kw_yield,

  identifier,
}

pub struct KeywordToken {
    pub keyword: &'static [u8],
    pub type_: TokenType,
}

pub const KEYWORD_TOKENS: [KeywordToken; 80] = [
    KeywordToken { keyword: b"abstract", type_: TokenType::kw_abstract },
    KeywordToken { keyword: b"any", type_: TokenType::kw_any },
    KeywordToken { keyword: b"as", type_: TokenType::kw_as },
    KeywordToken { keyword: b"assert", type_: TokenType::kw_assert },
    KeywordToken { keyword: b"asserts", type_: TokenType::kw_asserts },
    KeywordToken { keyword: b"async", type_: TokenType::kw_async },
    KeywordToken { keyword: b"await", type_: TokenType::kw_await },
    KeywordToken { keyword: b"bigint", type_: TokenType::kw_bigint },
    KeywordToken { keyword: b"boolean", type_: TokenType::kw_boolean },
    KeywordToken { keyword: b"break", type_: TokenType::kw_break },
    KeywordToken { keyword: b"case", type_: TokenType::kw_case },
    KeywordToken { keyword: b"catch", type_: TokenType::kw_catch },
    KeywordToken { keyword: b"class", type_: TokenType::kw_class },
    KeywordToken { keyword: b"const", type_: TokenType::kw_const },
    KeywordToken { keyword: b"constructor", type_: TokenType::kw_constructor },
    KeywordToken { keyword: b"continue", type_: TokenType::kw_continue },
    KeywordToken { keyword: b"debugger", type_: TokenType::kw_debugger },
    KeywordToken { keyword: b"declare", type_: TokenType::kw_declare },
    KeywordToken { keyword: b"default", type_: TokenType::kw_default },
    KeywordToken { keyword: b"delete", type_: TokenType::kw_delete },
    KeywordToken { keyword: b"do", type_: TokenType::kw_do },
    KeywordToken { keyword: b"else", type_: TokenType::kw_else },
    KeywordToken { keyword: b"enum", type_: TokenType::kw_enum },
    KeywordToken { keyword: b"export", type_: TokenType::kw_export },
    KeywordToken { keyword: b"extends", type_: TokenType::kw_extends },
    KeywordToken { keyword: b"false", type_: TokenType::kw_false },
    KeywordToken { keyword: b"finally", type_: TokenType::kw_finally },
    KeywordToken { keyword: b"for", type_: TokenType::kw_for },
    KeywordToken { keyword: b"from", type_: TokenType::kw_from },
    KeywordToken { keyword: b"function", type_: TokenType::kw_function },
    KeywordToken { keyword: b"get", type_: TokenType::kw_get },
    KeywordToken { keyword: b"global", type_: TokenType::kw_global },
    KeywordToken { keyword: b"if", type_: TokenType::kw_if },
    KeywordToken { keyword: b"implements", type_: TokenType::kw_implements },
    KeywordToken { keyword: b"import", type_: TokenType::kw_import },
    KeywordToken { keyword: b"in", type_: TokenType::kw_in },
    KeywordToken { keyword: b"infer", type_: TokenType::kw_infer },
    KeywordToken { keyword: b"instanceof", type_: TokenType::kw_instanceof },
    KeywordToken { keyword: b"interface", type_: TokenType::kw_interface },
    KeywordToken { keyword: b"intrinsic", type_: TokenType::kw_intrinsic },
    KeywordToken { keyword: b"is", type_: TokenType::kw_is },
    KeywordToken { keyword: b"keyof", type_: TokenType::kw_keyof },
    KeywordToken { keyword: b"let", type_: TokenType::kw_let },
    KeywordToken { keyword: b"module", type_: TokenType::kw_module },
    KeywordToken { keyword: b"namespace", type_: TokenType::kw_namespace },
    KeywordToken { keyword: b"never", type_: TokenType::kw_never },
    KeywordToken { keyword: b"new", type_: TokenType::kw_new },
    KeywordToken { keyword: b"null", type_: TokenType::kw_null },
    KeywordToken { keyword: b"number", type_: TokenType::kw_number },
    KeywordToken { keyword: b"object", type_: TokenType::kw_object },
    KeywordToken { keyword: b"of", type_: TokenType::kw_of },
    KeywordToken { keyword: b"out", type_: TokenType::kw_out },
    KeywordToken { keyword: b"override", type_: TokenType::kw_override },
    KeywordToken { keyword: b"package", type_: TokenType::kw_package },
    KeywordToken { keyword: b"private", type_: TokenType::kw_private },
    KeywordToken { keyword: b"protected", type_: TokenType::kw_protected },
    KeywordToken { keyword: b"public", type_: TokenType::kw_public },
    KeywordToken { keyword: b"readonly", type_: TokenType::kw_readonly },
    KeywordToken { keyword: b"require", type_: TokenType::kw_require },
    KeywordToken { keyword: b"return", type_: TokenType::kw_return },
    KeywordToken { keyword: b"set", type_: TokenType::kw_set },
    KeywordToken { keyword: b"static", type_: TokenType::kw_static },
    KeywordToken { keyword: b"string", type_: TokenType::kw_string },
    KeywordToken { keyword: b"super", type_: TokenType::kw_super },
    KeywordToken { keyword: b"switch", type_: TokenType::kw_switch },
    KeywordToken { keyword: b"symbol", type_: TokenType::kw_symbol },
    KeywordToken { keyword: b"this", type_: TokenType::kw_this },
    KeywordToken { keyword: b"throw", type_: TokenType::kw_throw },
    KeywordToken { keyword: b"true", type_: TokenType::kw_true },
    KeywordToken { keyword: b"try", type_: TokenType::kw_try },
    KeywordToken { keyword: b"type", type_: TokenType::kw_type },
    KeywordToken { keyword: b"typeof", type_: TokenType::kw_typeof },
    KeywordToken { keyword: b"undefined", type_: TokenType::kw_undefined },
    KeywordToken { keyword: b"unique", type_: TokenType::kw_unique },
    KeywordToken { keyword: b"unknown", type_: TokenType::kw_unknown },
    KeywordToken { keyword: b"var", type_: TokenType::kw_var },
    KeywordToken { keyword: b"void", type_: TokenType::kw_void },
    KeywordToken { keyword: b"while", type_: TokenType::kw_while },
    KeywordToken { keyword: b"with", type_: TokenType::kw_with },
    KeywordToken { keyword: b"yield", type_: TokenType::kw_yield },
];
